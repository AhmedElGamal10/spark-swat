#pragma OPENCL EXTENSION cl_khr_fp64 : enable

static __global void *alloc(__global void *heap, volatile __global uint *free_index, unsigned int heap_size, int nbytes, int *alloc_failed) {
   __global unsigned char *cheap = (__global unsigned char *)heap;
   uint rounded = nbytes + (8 - (nbytes % 8));
   uint offset = atomic_add(free_index, rounded);
   if (offset + nbytes > heap_size) { *alloc_failed = 1; return 0x0; }
   else return (__global void *)(cheap + offset);
}
struct This_s;

typedef struct __attribute__ ((packed)) org_apache_spark_rdd_cl_tests_DenseVectorInputTest$_s{
   
} org_apache_spark_rdd_cl_tests_DenseVectorInputTest$;


typedef struct __attribute__ ((packed)) org_apache_spark_mllib_linalg_DenseVector_s{
   __global double*  values;
   int  size;
   
} org_apache_spark_mllib_linalg_DenseVector;

typedef struct This_s{
   } This;

static int org_apache_spark_mllib_linalg_DenseVector__size(__global org_apache_spark_mllib_linalg_DenseVector *this) {
    return (this->size);
}


static double org_apache_spark_mllib_linalg_DenseVector__apply(__global org_apache_spark_mllib_linalg_DenseVector *this, int index) {
    return (this->values)[32 * index];
}

static double org_apache_spark_rdd_cl_tests_DenseVectorInputTest$$anon$1__apply(This *this, __global org_apache_spark_mllib_linalg_DenseVector* in){

   return(
   {
   
      double sum = 0.0;
      int i = 0;
      for (; i<org_apache_spark_mllib_linalg_DenseVector__size(in); i = i + 1){
      
         sum = sum + org_apache_spark_mllib_linalg_DenseVector__apply(in, i);
      }
      sum;
   });
}
__kernel void run(
      __global org_apache_spark_mllib_linalg_DenseVector* in0, __global double *in0_values, __global int *in0_sizes, __global int *in0_offsets, int nin0, 
      __global double* out, int N) {
   This thisStruct;
   This* this=&thisStruct;
   __global org_apache_spark_mllib_linalg_DenseVector *my_in0 = in0 + get_global_id(0);
   for (int i = get_global_id(0); i < N; i += get_global_size(0)) {
      my_in0->values = in0_values + in0_offsets[i]; my_in0->size = in0_sizes[i];
      out[i] = org_apache_spark_rdd_cl_tests_DenseVectorInputTest$$anon$1__apply(this, in0 + i);
      
   }
}
